version: "3.8"
services:

  datadog-agent:
    image: gcr.io/datadoghq/agent:7
    container_name: datadog-agent
    env_file: ./.env
    restart: always
    environment:
      - DD_API_KEY=$YOUR_DATADOG_API_KEY
      - DD_SITE=datadoghq.com
      - DD_APM_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_CONTAINER_EXCLUDE=image:gcr.io/datadoghq/agent*
      - DD_CONTAINER_EXCLUDE_METRICS=image:gcr.io/datadoghq/agent*
      - DD_CONTAINER_EXCLUDE_LOGS=image:gcr.io/datadoghq/agent*
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    networks:
        - spring-cloud-network
  
  backend:
      build:
        context: .
        dockerfile: Dockerfile
      image: api-sql:1
      container_name: api-sql
      labels:
        com.datadoghq.tags.env: 'prd'
        com.datadoghq.tags.service: 'api-sql'
        com.datadoghq.tags.version: "1"
      environment:
        - DD_ENV="prd" 
        - DD_SERVICE="api-sql" 
        - DD_VERSION="1" 
        - DD_AGENT_HOST="datadog-agent" 
        # - DD_TRACE_AGENT_PORT="8126"
        - DD_LOGS_INJECTION=true 
        - SPRING_DATASOURCE_URL=$SPRING_DATASOURCE_URL
      env_file: ./.env
      ports:
        - 8080:8080
      depends_on:
        mysql:
          condition: service_healthy
      networks:
        - spring-cloud-network

  mysql:
    container_name: mysql
    image: 'mysql:latest'
    restart: unless-stopped
    env_file: ./.env
    environment:
        MYSQL_ROOT_PASSWORD: RootPassword
        MYSQL_DATABASE: Backoffice
        MYSQL_USER: MainUser
        MYSQL_PASSWORD: MainPassword
    ports:
      - 3306:3306
    healthcheck:
      test:  ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10     
    networks:
      - spring-cloud-network
      
networks:
    spring-cloud-network:

